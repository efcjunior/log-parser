/*
 * This file is generated by jOOQ.
*/
package com.ef.model.jooq.tables.records;


import com.ef.model.jooq.tables.RequestHttpLog;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestHttpLogRecord extends TableRecordImpl<RequestHttpLogRecord> implements Record4<Timestamp, String, Short, String> {

    private static final long serialVersionUID = 344594512;

    /**
     * Setter for <code>db_parser.request_http_log.dt</code>.
     */
    public void setDt(Timestamp value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_parser.request_http_log.dt</code>.
     */
    public Timestamp getDt() {
        return (Timestamp) get(0);
    }

    /**
     * Setter for <code>db_parser.request_http_log.ip</code>.
     */
    public void setIp(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_parser.request_http_log.ip</code>.
     */
    public String getIp() {
        return (String) get(1);
    }

    /**
     * Setter for <code>db_parser.request_http_log.status_code</code>.
     */
    public void setStatusCode(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_parser.request_http_log.status_code</code>.
     */
    public Short getStatusCode() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>db_parser.request_http_log.user_agent</code>.
     */
    public void setUserAgent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_parser.request_http_log.user_agent</code>.
     */
    public String getUserAgent() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Timestamp, String, Short, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Timestamp, String, Short, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field1() {
        return RequestHttpLog.REQUEST_HTTP_LOG.DT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return RequestHttpLog.REQUEST_HTTP_LOG.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return RequestHttpLog.REQUEST_HTTP_LOG.STATUS_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return RequestHttpLog.REQUEST_HTTP_LOG.USER_AGENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component1() {
        return getDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getStatusCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getUserAgent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value1() {
        return getDt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getStatusCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getUserAgent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestHttpLogRecord value1(Timestamp value) {
        setDt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestHttpLogRecord value2(String value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestHttpLogRecord value3(Short value) {
        setStatusCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestHttpLogRecord value4(String value) {
        setUserAgent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestHttpLogRecord values(Timestamp value1, String value2, Short value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RequestHttpLogRecord
     */
    public RequestHttpLogRecord() {
        super(RequestHttpLog.REQUEST_HTTP_LOG);
    }

    /**
     * Create a detached, initialised RequestHttpLogRecord
     */
    public RequestHttpLogRecord(Timestamp dt, String ip, Short statusCode, String userAgent) {
        super(RequestHttpLog.REQUEST_HTTP_LOG);

        set(0, dt);
        set(1, ip);
        set(2, statusCode);
        set(3, userAgent);
    }
}
